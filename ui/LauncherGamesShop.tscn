[gd_scene load_steps=9 format=2]

[ext_resource path="res://ui/Theme/MenuUI.tres" type="Theme" id=1]
[ext_resource path="res://ui/font/VKSansDisplay-DemiBold.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://ui/font/VKSansDisplay-Regular.ttf" type="DynamicFontData" id=3]
[ext_resource path="res://addons/native_dialogs/bin/native_dialog_message.gdns" type="Script" id=4]

[sub_resource type="GDScript" id=5]
script/source = "extends Panel

var AllGamesData = ''

const debug = false # Использовать откладку


func _on_HTTPRequest_request_completed(result, response_code, headers, body):
	if result == HTTPRequest.RESULT_SUCCESS:
		if response_code == 200:
			for _i in $ScrollContainer/in.get_children():
				_i.queue_free()
			#Получаем данные во временную переменную
			var data = body.get_string_from_utf8()
			to_json(data) #Переводим данные в json
			var pars_json = JSON.parse(data) #Парсим json
			if pars_json.error != OK: #Если есть какая то ошибка то пишем
				print('ERROR')
				return
			var main_data = pars_json.result #Результат выводим во временную переменую
				
			#Данные из временной переменой заносим в основные переменные глобального скрипта
			AllGamesData = main_data
			print(main_data)
			if str(AllGamesData) == '[]':
				$Search/SerachResult.show()
			else:
				$Search/SerachResult.hide()
				
			for i in int(AllGamesData.size()):
				if int(AllGamesData[i]['GameView']) != 1 and int(AllGamesData[i]['GameView']) != 3: #Если 1 то не отображаем игру, если 2 то тоже не отображаем
					var GameBox = preload(\"res://ui/Component/GameAboutPanel.tscn\").instance()
		
					var GameTitle = AllGamesData[i]['GameName']
					var GameAbout = AllGamesData[i]['GameDesc']
					var GameIcon = 'https://web1182.craft-host.ru/kikgames/'+AllGamesData[i]['icon']
					var GameId = AllGamesData[i]['id']
		
					GameBox.get_node('GamePanel/GameTitle').text = GameTitle
					GameBox.get_node('GamePanel/GameAbout').text = GameAbout
					GameBox.get_node(\"GamePanel/Photo\")._setTextureUrl(GameIcon)
					#GameBox.get_node(\"GamePanel/Open\").SiteId = GameId
					GameBox.get_node(\"GamePanel\").SiteId = GameId
					$ScrollContainer/in.add_child(GameBox)
			var UpdatePanel = preload(\"res://ui/Component/UnderPanel.tscn\").instance()
			$ScrollContainer/in.add_child(UpdatePanel)
			G.MainScene.loadcomplite = true
			G.NetWarning = false
	elif result == HTTPRequest.RESULT_CANT_CONNECT:
		if response_code == 0:
			if !G.NetWarning:
				print(AllGamesData)
				G.NetWarning = true
				G.CallAlert('Ошибка загрузки магазина, проверьте подключение интернета и состояние сервера KIK Games (https://web1182.craft-host.ru/kikgames/)\\n\\n Лаунчер в оффлайн режиме, запуск игр можно произвести в разделе \"Библеотека\"',G.AppTitle,true)
		
			G.MainScene.loadcomplite = false	
			G.MainScene.SetBlockLable('Главная страница | Ошибка загрузки \\\\ NetERROR')
			
	G.MainScene.CheckShopLoad()

func _on_NativeDialogMessage_result_selected(result):
	match result:
		2:
			OS.shell_open('https://web1182.craft-host.ru/kikgames/')
			

var q = 'ApiGet=allgames'
func _ready():
	#При старте программы мы отправляем API запрос на получение всех данных игр с базы данных KIK Games
	G.ShopScene = self
	var head = [\"User-Agent:Firefox/1.0\"]
	q = \"ApiGet=allgames\"
	
	$HTTPRequest.request(\"https://web1182.craft-host.ru/kikgames/kikgameslauncher/api.php?\"+q,head,false)
	
	if debug:
		print('===AllData===')
		print(AllGamesData)
		print('===End===')

func UpdatePanel():
	$Update.disabled = true
	for _i in $ScrollContainer/in.get_children():
		_i.queue_free()
	$Update.disabled = false
	_ready()
	G.MainScene.loadcomplite = false
	$Search.text = ''

func _on_Update_pressed():
	UpdatePanel()

func _on_Search_text_changed(new_text):
	if new_text == '':
		UpdatePanel()
	var head = [\"User-Agent:Firefox/1.0\"]
	q = \"ApiGet=GameSearch&text=\"+new_text
	$HTTPRequest.request(\"https://web1182.craft-host.ru/kikgames/kikgameslauncher/api.php?\"+q,head,false)



func _on_ScrollContainer_scroll_started():
	print('123')


func _on_ScrollContainer_scroll_ended():
	print('321')
"

[sub_resource type="DynamicFont" id=6]
outline_size = 1
outline_color = Color( 1, 1, 1, 0.156863 )
font_data = ExtResource( 3 )

[sub_resource type="Theme" id=4]
GridContainer/constants/hseparation = 5
GridContainer/constants/vseparation = 50
VBoxContainer/constants/separation = 50

[sub_resource type="DynamicFont" id=7]
size = 32
font_data = ExtResource( 2 )

[node name="GamesPanel" type="Panel"]
margin_left = 20.0
margin_top = 143.0
margin_right = 1255.0
margin_bottom = 706.0
theme = ExtResource( 1 )
script = SubResource( 5 )

[node name="Update" type="LinkButton" parent="."]
margin_left = 1056.0
margin_top = 5.0
margin_right = 1188.0
margin_bottom = 25.0
focus_mode = 2
custom_fonts/font = SubResource( 6 )
text = "Обновить список"
underline = 2

[node name="HTTPRequest" type="HTTPRequest" parent="."]
use_threads = true
max_redirects = 10
timeout = 4.0

[node name="ScrollContainer" type="ScrollContainer" parent="."]
margin_left = 6.0
margin_top = 36.0
margin_right = 1226.0
margin_bottom = 559.0
rect_min_size = Vector2( 760, 500 )
size_flags_horizontal = 15
size_flags_vertical = 15
scroll_deadzone = 5

[node name="in" type="VBoxContainer" parent="ScrollContainer"]
margin_right = 1220.0
margin_bottom = 523.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = SubResource( 4 )

[node name="Search" type="LineEdit" parent="."]
margin_left = 26.0
margin_top = 9.0
margin_right = 228.0
margin_bottom = 33.0
virtual_keyboard_enabled = false
placeholder_text = "Поиск"

[node name="SerachResult" type="Label" parent="Search"]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = 265.0
margin_top = 224.0
margin_right = 716.0
margin_bottom = 264.0
custom_fonts/font = SubResource( 7 )
text = "Мы ничего не нашли"
align = 1
valign = 1

[node name="NativeDialogMessage" type="Node" parent="."]
script = ExtResource( 4 )
title = "Ошибка KIK Games"
text = "Магазин загрузился с ошибкой 0, нажмите \"Да\", чтобы лаунчер открыл сайт KIK Games, а затем закройте его и обновите список игр"
choice = 2
icon = 3

[connection signal="pressed" from="Update" to="." method="_on_Update_pressed"]
[connection signal="request_completed" from="HTTPRequest" to="." method="_on_HTTPRequest_request_completed"]
[connection signal="scroll_ended" from="ScrollContainer" to="." method="_on_ScrollContainer_scroll_ended"]
[connection signal="scroll_started" from="ScrollContainer" to="." method="_on_ScrollContainer_scroll_started"]
[connection signal="text_changed" from="Search" to="." method="_on_Search_text_changed"]
[connection signal="result_selected" from="NativeDialogMessage" to="." method="_on_NativeDialogMessage_result_selected"]
